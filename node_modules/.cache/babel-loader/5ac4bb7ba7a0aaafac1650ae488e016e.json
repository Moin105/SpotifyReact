{"ast":null,"code":"var _jsxFileName = \"E:\\\\builds\\\\SpotifyReact\\\\src\\\\DataLayer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataLayerContext = /*#__PURE__*/createContext();\nexport const DataLayer = _ref => {\n  _s();\n\n  let {\n    initialState,\n    reducer,\n    childern\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DataLayerContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: childern\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 1\n  }, this);\n};\n\n_s(DataLayer, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = DataLayer;\nexport const useDataLayerValue = () => {\n  _s2();\n\n  return useContext(DataLayerContext);\n};\n\n_s2(useDataLayerValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataLayer\");","map":{"version":3,"sources":["E:/builds/SpotifyReact/src/DataLayer.js"],"names":["React","createContext","useContext","useReducer","DataLayerContext","DataLayer","initialState","reducer","childern","useDataLayerValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IACIC,aADJ,EAEIC,UAFJ,EAGIC,UAHJ,QAIO,OAJP;;AAMA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,EAAtC;AAEP,OAAO,MAAMI,SAAS,GAAG;AAAA;;AAAA,MAAC;AAACC,IAAAA,YAAD;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAD;AAAA,sBACzB,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEL,UAAU,CAACI,OAAD,EAAUD,YAAV,CAA5C;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,CAAlB;;GAAMH,S;;KAAAA,S;AAKb,OAAO,MAAMI,iBAAiB,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAA1B;;IAAMK,iB","sourcesContent":["import React,{\r\n    createContext,\r\n    useContext,\r\n    useReducer\r\n} from \"react\";\r\n\r\nexport const DataLayerContext = createContext()\r\n\r\nexport const DataLayer = ({initialState , reducer ,childern}) =>(\r\n<DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {childern}\r\n</DataLayerContext.Provider>\r\n)\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);"]},"metadata":{},"sourceType":"module"}